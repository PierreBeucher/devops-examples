# aws ec2 import-key-pair --key-name dockerd --public-key-material fileb://key.pub
- hosts: localhost
  vars:
    ansible_connection: local
  tasks:
    - name: Ensure .ssh directory exists
      tags: [ ssh ]
      file:
        state: directory
        path: "{{ playbook_dir }}/.ssh"
        mode: 0700

    - name: Generate an OpenSSH keypair
      tags: [ ssh ]
      community.crypto.openssh_keypair:
        path: "{{ playbook_dir }}/.ssh/key"

    - name: Create key pair
      amazon.aws.ec2_key:
        name: dockerd-tls
        key_material: "{{ lookup('file', playbook_dir + '/.ssh/key.pub') }}"

    - name: Manage Dockerd CloudFormation stack
      register: docker_cf_stack
      tags: [ always ]
      amazon.aws.cloudformation:
        stack_name: dockerd-tls
        state: "{{ docker_state | default('present') }}"
        region: eu-west-3
        template: cloudformation.yml
        template_parameters:
          KeyName: dockerd-tls
    
    - name: add managed instance as hosts
      tags: [ always ]
      when: (docker_state | default('present')) != "absent"
      add_host:
        name: "{{ docker_cf_stack.stack_outputs.DockerdIP }}"
        groups:
        - dockerd
      
- hosts: dockerd
  vars:
    ansible_ssh_private_key_file: "{{ playbook_dir }}/.ssh/key"
    ansible_user: ubuntu
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
  tasks:
  - name: copy Docker Daemon certificate
    become: true
    copy:
      src: "{{ playbook_dir }}/.tls/server/cert.pem"
      dest: "/root/docker-cert.pem"

  - name: copy Docker Daemon private key
    become: true
    copy:
      src: "{{ playbook_dir }}/.tls/server/key.pem"
      dest: "/root/docker-key.pem"

  - name: copy Docker Daemon CA
    become: true
    copy:
      src: "{{ playbook_dir }}/.tls/server/ca.pem"
      dest: "/root/docker-ca.pem"

  - name: create Docker service override dir
    tags: [ docker ]
    become: true
    file:
      state: directory
      owner: root
      group: root
      path: /etc/systemd/system/docker.service.d

  - name: copy Docker service override
    tags: [ docker ]
    become: true
    copy:
      dest: /etc/systemd/system/docker.service.d/docker.conf
      owner: root
      group: root
      content: |
        [Service]
        ExecStart=
        ExecStart=/usr/bin/dockerd
  
  - name: Import role geerlingguy.docker
    import_role:
      name: geerlingguy.docker
    become: true
    vars:
      docker_daemon_options: {
          "tlsverify": true,
          "tlscacert": "/root/docker-ca.pem",
          "tlscert": "/root/docker-cert.pem",
          "tlskey": "/root/docker-key.pem",
          "hosts": ["tcp://0.0.0.0:2376"]
        }
    
  - tags: [ end ]
    pause:
      seconds: 1
      prompt: |
        To user remote Docker daemon:

        unset DOCKER_HOST DOCKER_CERT_PATH DOCKER_TLS
        export DOCKER_CERT_PATH={{ playbook_dir }}/.tls/client
        export DOCKER_HOST=tcp://{{ ansible_host }}:2376
        export DOCKER_TLS=1
        docker ps
